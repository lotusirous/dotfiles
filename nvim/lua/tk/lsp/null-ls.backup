local null_ls_status_ok, null_ls = pcall(require, "null-ls")
if not null_ls_status_ok then
	return
end

-- https://github.com/jose-elias-alvarez/null-ls.nvim/tree/main/lua/null-ls/builtins/formatting
local formatting = null_ls.builtins.formatting
-- https://github.com/jose-elias-alvarez/null-ls.nvim/tree/main/lua/null-ls/builtins/diagnostics
local diagnostics = null_ls.builtins.diagnostics

-- https://github.com/prettier-solidity/prettier-plugin-solidity
-- npm install --save-dev prettier prettier-plugin-solidity
local augroup = vim.api.nvim_create_augroup("LspFormatting", {})
null_ls.setup({
	debug = false,
	sources = {
		formatting.deno_fmt.with({
			filetypes = {
				"javascript",
				"javascriptreact",
				"markdown",
				"typescript",
				"typescriptreact",
			},
		}),

		formatting.stylua,
		-- for python
		formatting.black.with({ extra_args = { "--fast" } }),
		formatting.isort,

		-- hashkell
		formatting.stylish_haskell,

		-- json
		formatting.jq,
		-- swift
		formatting.swiftformat,
		-- c
		formatting.clang_format,

		-- sql
		-- formatting.sql_formatter.with({
		-- 	extra_args = { "-l", "mysql" },
		-- }),
		-- shell
		formatting.shfmt,
		-- for golang
		formatting.gofumpt,
		formatting.goimports,
		diagnostics.golangci_lint,

		-- others
		diagnostics.shellcheck,
		diagnostics.codespell,

		formatting.prettier.with({
			filetypes = {
				"yaml",
			},
			extra_filetypes = { "solidity" },
			extra_args = { "--no-semi", "--single-quote", "--jsx-single-quote" },
		}),
	},
	on_attach = function(client, bufnr)
		if client.supports_method("textDocument/formatting") then
			vim.api.nvim_clear_autocmds({ group = augroup, buffer = bufnr })
			vim.api.nvim_create_autocmd("BufWritePre", {
				group = augroup,
				buffer = bufnr,
				callback = function()
					-- on 0.8, you should use vim.lsp.buf.format({ bufnr = bufnr }) instead
					vim.lsp.buf.format({ bufnr = bufnr })
				end,
			})
		end
	end,
})
